name: SonarQube
on:
  push:
    branches:
      - master

permissions:
  contents: read     # Allows reading repository contents
  issues: write      # Required if the scan results need to create GitHub issues
  security-events: write  # Required for security scan tools like Snyk, SonarCloud
  actions: read   

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Vrinda1725_java-devsecops-pipeline
      - name: Download SonarCloud Analysis Report
        run: |
          curl -o sonarcloud-report.json "https://sonarcloud.io/api/measures/component?component=Vrinda1725_java-devsecops-pipeline&metricKeys=bugs,vulnerabilities,code_smells,coverage"

      - name: Upload SonarCloud Report as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sonarcloud-report
          path: sonarcloud-report.json
          
  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run the SCA scan on the source code
    steps:
      - uses: actions/checkout@master
      - name: RunSnyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
  zap_scan:
    runs-on: ubuntu-latest
    needs: security
    name: Run DAST scan on the web application
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'  # Specifies the stable OWASP ZAP Docker image
          target: 'http://testphp.vulnweb.com/'  # Defines the web application URL to scan for vulnerabilities
          cmd_options: '-a'  # Enables aggressive mode to perform a more thorough security scan