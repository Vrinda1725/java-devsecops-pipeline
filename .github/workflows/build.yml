name: SonarQube
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Alternative distribution options are available.

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Vrinda1725_java-devsecops-pipeline

# name: Build code, run unit test, run SAST, SCA, DAST security scans
# on: push

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     name: Run unit tests and SAST scan on the source code 
#     steps:
#       - name: Checkout source code
#         uses: actions/checkout@v4

#       - name: Set up JDK 21
#         uses: actions/setup-java@v4
#         with:
#           java-version: '21'
#           distribution: 'zulu'
#           cache: maven

#       - name: Run Unit Tests
#         run: mvn test

#       - name: Run SonarCloud Analysis (SAST)
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:4.0.0.4121:sonar -Dsonar.projectKey=vrinda-java -Dsonar.organization=Vrinda1725 -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$SONAR_TOKEN
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#   security:
#     runs-on: ubuntu-latest
#     needs: build
#     name: Run the SCA scan on the source code
#     steps:
#       - uses: actions/checkout@master
#       - name: Install Snyk CLI
#         run: npm install -g snyk

#       - name: Authenticate Snyk CLI
#         run: snyk auth ${{ secrets.SNYK_TOKEN }}

#       - name: Run Snyk Code Scan (SAST) for SQL Injection & other issues
#         run: snyk code test --severity-threshold=high
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#       - name: RunSnyk to check for vulnerabilities
#         uses: snyk/actions/maven@master
#         continue-on-error: true
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  